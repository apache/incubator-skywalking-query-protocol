# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The list of browser error log
type BrowserErrorLogBrief {
    errorLogs: [BasicBrowserErrorLog!]!
    total: Int!
}

# Browser error log basic info
type BasicBrowserErrorLog {
    uniqueId: String!
    pagePath: String!
    time: Long!
}

# Represent the conditions used for query BrowserErrorLogBrief
input BrowserErrorLogQueryCondition {
    # The value of 0 means all services.
    serviceId: ID
    serviceVersionId: ID
    pagePathId: ID
    pagePath: String
    # The time range of browser perf data time
    queryDuration: Duration
    paging: Pagination!
}

type BrowserPerfData {
    uniqueId: String!
    serviceId: ID!
    serviceName: String!
    serviceVersionId: ID!
    serviceVersionName: String!
    pagePathId: ID!
    pagePath: String!
    # Perf time
    time: Long!
    logs: [BrowserErrorLog!]!
    perfDetail: PerfDetail!
}

type BrowserErrorLog {
    catalog: String!
    grade: String!
    message: String!
    line: Int!
    col: Int!
    stack: String!
    errorUrl: String!
    # Error log time
    time: Long!
}

type PerfDetail {
    # Unit of all time related field should be `ms`.
    redirectTime: Int!
    dnsTime: Int!
    reqTime: Int!
    domAnalysisTime: Int!
    domReadyTime: Int!
    blankTime: Int!
}

extend type Query {
    queryBasicBrowserErrorLog(condition: BrowserErrorLogQueryCondition): BrowserErrorLogBrief
    queryBrowserErrorLog(uniqueId: String!): BrowserPerfData
}